---
__type: SmartContract

# minimum Universa smart contract API level required to process this contract
api_level: 3

# this is an required and immutable section that must be copied between states. it defines main contract
# properties and permissions.
definition:

  issuer:
   # required. contract must have issuer (or issuers). on creation, the root contract must be signed by
   # all issuers.

     key: >
          HggcAQABxAACzHE9ibWlnK4RzpgFIB4jIg3WcXZSKXNAqOTYUtGXY03xJSwpqE+y/HbqqE0WsmcAt5
          a0F5H7bz87Uy8Me1UdIDcOJgP8HMF2M0I/kkT6d59ZhYH/TlpDcpLvnJWElZAfOytaICE01bkOkf6M
          z5egpToDEEPZH/RXigj9wkSXkk43WZSxVY5f2zaVmibUZ9VLoJlmjNTZ+utJUZi66iu9e0SXupOr/+
          BJL1Gm595w32Fd0141kBvAHYDHz2K3x4m1oFAcElJ83ahSl1u85/naIaf2yuxiQNz3uFMTn0IpULCM
          vLMvmE+L9io7+KWXld2usujMXI1ycDRw85h6IJlPcKHVQKnJ/4wNBUveBDLFLlOcMpCzWlO/D7M2Iy
          Na8XEvwPaFJlN1UN/9eVpaRUBEfDq6zi+RC8MaVWzFbNi913suY0Q8F7ejKR6aQvQPuNN6bK6iRYZc
          hxe/FwWIXOr0C0yA3NFgxKLiKZjkd5eJ84GLy+iD00Rzjom+GG4FDQKr2HxYZDdDuLE4PEpYSzEB/8
          LyIqeM7dSyaHFTBII/sLuFru6ffoKxBNk/cwAGZqOwD3fkJjNq1R3h6QylWXI/cSO9yRnRMmMBJwal
          MexOc3/kPEEdfjH/GcJU0Mw6DgoY8QgfaNwXcFbBUvf3TwZ5Mysf21OLHH13g8gzREm+h8c=
     # _xer0yfe2nn1xthc.unikey

     # to show to the user
     description: >
       DeLorean's factory.

  # required. time of contract creation. must not be in the futute or too long in the past (few days are allowed,
  # consult current Universa state, maximum delayed contract creation time varies. This time we make a template
  # which will be substituted by the creation time on issuing client:

  # will keep the time of root contract creation
  created_at: now()

  # required key, can be empty if the contract uses only standard roles, issues and creator.
  roles:
   # no extra roles, issuer and owner are predefined, so empty list.

  # required key, if left empty, the contract can not be changed or revoked. Be careful.
  permissions:
     # owner have a right to transfer ownership. Note that if the creator will be mentioned here, only the creator
     # will have permission to change owner. It is very important to allow it, so the owner can pay with a coin, or
     # split a part of it for another beneficiary
    change_owner: owner

    # who can revoke the contract: owner, and issuer altogether. Usually it means - when the issuer posess the contract
    # for example by bying it back from the customer, it is possible ro revoke it. Very much like destroying banknotes
    # by its owner - but we require also issuer signature on it:
    revoke:
      - issuer
      - owner
#      - role:
#        name: list_role
#        type: ALL_OF
#        roles:
#          - issuer
#          - owner

  # required section, could be empty. Any immutable structured data issuer might need to include into the contract
  # this data will be also copied without change during any contract changes.
  data:
    # optional, but almost always needed name or four currency
    name: DeLorean

    description: This contract represents the ownership of the car DeLorean.

# required section. Data that represent current contract state, could be modified in accordance with
# 'permissions' section above
state:
 # required. most often, we should specify contract owner. we could specify 'issuer' or provide a key
  owner:
    # we create contract to be owned by another person, so we must provide a key:
    key: HggcAQABxAABp8V6gGoUG3lsypgABbqNREfvIupyjtTY8yOHOPA3RWAoIr8VLC6ypMKmlbcZ
         o3OGx6y93BhpYphdOjv9N580044z8viFOEmxp9X6NTFCHEGVzY4YyW+i1LFwJxR2vEKhnrS4
         dY1O3Ue9g0vbdjBpLoxgfmZQAyGPFHgb0SJiaO9SZA1IanzCu+yOeiuhJsJZeJe6tYyVnwpX
         7ySuZhXMGhkdmkGjuuMlbscQ0bp9qHNwjvWnLheKcSeObjlhVv74ajh+CgDiQkCnsFqZZZKd
         QGVkmBVgIhN5cMgDTx+trpATEf86GadnodGTqTUthckUvlRgOsBaWoLADpMhz69kgw==
    # marty_mcfly.unikey

    # the rest is optional and application-specific
    name:
      salutation: Mr.
      first: Marty
      last: McFly

  # required. who has created this document. for the root contract it is always the issues, for changed
  # states it is almost always the owner. The contract should be signed by this key.
  created_by: issuer

   # required. must be in distant future.
  expires_at:
    __t: unixtime
    seconds: 1659720337

  # required. revision increments on any contract edit. the root contract has always revision of 1
  revision: 1

  # required. the contract based on which has created this one. it could be previous state of the contract in the
  # case of the edit or another contract that generates child contract and so on. this time it is a new chain
  # root so it is empty:
  parent: ~

  # required. the contract origin. when the contract state changes, the origin should always point to the root
  # contract, to which it is empty. This field mutates once, so it is part of the state, not definition.
  # this is a root contract, so:
  origin: ~

  # required except root contracts. creation time of this revision (e.g. state). As it is a root contract, we
  # leave it empty:
  created_at: ~

  # required section. any application data that could be changed.
  data:
    # we can recolor the car, but contract should still be valid
    color: cccccc
    # registration number at the State Car Registration Institute
    registration_number: e777kx39ru


